{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\toooshine\\\\Desktop\\\\GIT\\\\paygreen\\\\frontend\\\\src\\\\Components\\\\Transaction\\\\CryptoNumberCard.js\";\nimport React from 'react';\nimport { FormGroup, Label, Input } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nexport default class CryptoNumberrCard extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChangeryptoNumber = ({\n      target: {\n        value\n      }\n    }) => {\n      value = value // Remove all non-digits\n      .replace(/\\D+/, '') // Stick to first 16, ignore later digits\n      .slice(0, 3);\n\n      if (value.length === 3) {\n        this.setState({\n          errorNumber: true\n        });\n      } else {\n        this.setState({\n          errorNumber: false\n        });\n      }\n\n      this.setState({\n        cryptoNumberValue: value\n      });\n      this.props.cryptoNumberCard(value);\n    };\n\n    this.state = {\n      cryptoNumberValue: '',\n      errorNumber: false\n    };\n  }\n\n  render() {\n    return React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Label, {\n      style: {\n        color: 'grey'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Cryptogramme visuel\"), this.props.errorcryptoNumber && !this.state.errorNumber ? React.createElement(\"span\", {\n      style: {\n        color: '#C82333'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Cryptogramme visuel manquant ou invalide\") : null), React.createElement(Input, {\n      type: \"text\",\n      name: \"cryptoNumber\",\n      id: \"cryptoNumber\",\n      placeholder: \"Cryptogramme visuel\",\n      required: true,\n      value: this.state.cryptoNumberValue,\n      onChange: this.handleChangeryptoNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/toooshine/Desktop/GIT/paygreen/frontend/src/Components/Transaction/CryptoNumberCard.js"],"names":["React","FormGroup","Label","Input","CryptoNumberrCard","Component","constructor","handleChangeryptoNumber","target","value","replace","slice","length","setState","errorNumber","cryptoNumberValue","props","cryptoNumberCard","state","render","display","justifyContent","color","errorcryptoNumber"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,KAA3B,QAAwC,YAAxC;AACA,OAAO,kCAAP;AAEA,eAAe,MAAMC,iBAAN,SAAgCJ,KAAK,CAACK,SAAtC,CAAgD;AAC9DC,EAAAA,WAAW,GAAG;AACb;;AADa,SAQdC,uBARc,GAQY,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AAAV,KAAD,KAA2B;AACpDA,MAAAA,KAAK,GAAGA,KAAK,CACZ;AADY,OAEXC,OAFM,CAEE,KAFF,EAES,EAFT,EAGP;AAHO,OAINC,KAJM,CAIA,CAJA,EAIG,CAJH,CAAR;;AAMA,UAAIF,KAAK,CAACG,MAAN,KAAiB,CAArB,EAAwB;AACvB,aAAKC,QAAL,CAAc;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAAd;AACA,OAFD,MAEO;AACN,aAAKD,QAAL,CAAc;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAAd;AACA;;AACD,WAAKD,QAAL,CAAc;AAAEE,QAAAA,iBAAiB,EAAEN;AAArB,OAAd;AACA,WAAKO,KAAL,CAAWC,gBAAX,CAA4BR,KAA5B;AACA,KAtBa;;AAEb,SAAKS,KAAL,GAAa;AACZH,MAAAA,iBAAiB,EAAE,EADP;AAEZD,MAAAA,WAAW,EAAE;AAFD,KAAb;AAIA;;AAkBDK,EAAAA,MAAM,GAAG;AACR,WACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE;AAAnC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADD,EAEE,KAAKN,KAAL,CAAWO,iBAAX,IAAgC,CAAC,KAAKL,KAAL,CAAWJ,WAA5C,GACA;AAAM,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADA,GAEG,IAJL,CADD,EAOC,oBAAC,KAAD;AACC,MAAA,IAAI,EAAC,MADN;AAEC,MAAA,IAAI,EAAC,cAFN;AAGC,MAAA,EAAE,EAAC,cAHJ;AAIC,MAAA,WAAW,EAAC,qBAJb;AAKC,MAAA,QAAQ,MALT;AAMC,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWH,iBANnB;AAOC,MAAA,QAAQ,EAAE,KAAKR,uBAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPD,CADD;AAmBA;;AA7C6D","sourcesContent":["import React from 'react';\r\nimport { FormGroup, Label, Input } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nexport default class CryptoNumberrCard extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tcryptoNumberValue: '',\r\n\t\t\terrorNumber: false\r\n\t\t};\r\n\t}\r\n\r\n\thandleChangeryptoNumber = ({ target: { value } }) => {\r\n\t\tvalue = value\r\n\t\t\t// Remove all non-digits\r\n\t\t\t.replace(/\\D+/, '')\r\n\t\t\t// Stick to first 16, ignore later digits\r\n\t\t\t.slice(0, 3);\r\n\r\n\t\tif (value.length === 3) {\r\n\t\t\tthis.setState({ errorNumber: true });\r\n\t\t} else {\r\n\t\t\tthis.setState({ errorNumber: false });\r\n\t\t}\r\n\t\tthis.setState({ cryptoNumberValue: value });\r\n\t\tthis.props.cryptoNumberCard(value);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<FormGroup>\r\n\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\t\t\t\t\t<Label style={{ color: 'grey' }}>Cryptogramme visuel</Label>\r\n\t\t\t\t\t{this.props.errorcryptoNumber && !this.state.errorNumber ? (\r\n\t\t\t\t\t\t<span style={{ color: '#C82333' }}>Cryptogramme visuel manquant ou invalide</span>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"cryptoNumber\"\r\n\t\t\t\t\tid=\"cryptoNumber\"\r\n\t\t\t\t\tplaceholder=\"Cryptogramme visuel\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tvalue={this.state.cryptoNumberValue}\r\n\t\t\t\t\tonChange={this.handleChangeryptoNumber}\r\n\t\t\t\t/>\r\n\t\t\t</FormGroup>\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}