{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\toooshine\\\\Desktop\\\\GIT\\\\paygreen\\\\frontend\\\\src\\\\Components\\\\Transaction.js\";\nimport React from 'react';\nimport { Button, Form, FormGroup, Label, Input, Card, InputGroupText, InputGroupAddon, InputGroup } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport HeaderTransaction from './HeaderTransaction';\nimport CardNumber from './CardNumber';\nimport ExpiredCard from './Transaction/ExpiredCard';\nimport BeneficiaryClient from './BeneficiaryClient';\nimport background from '../images/background.jpg';\nexport default class Transaction extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = () => {\n      // We want to save a transaction in our db\n      // Here, we are using ES6 syntax, so we do not need to store this in ctx.\n      fetch('http://localhost:3000/doTransaction', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: `first_name=${this.state.firstName}&last_name=${this.state.lastName}`\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.handleChangeryptoNumber = ({\n      target: {\n        value\n      }\n    }) => {\n      value = value // Remove all non-digits\n      .replace(/\\D+/, '') // Stick to first 16, ignore later digits\n      .slice(0, 3);\n      this.setState({\n        cryptoNumberValue: value\n      });\n    };\n\n    this.handleChangeFirstNameLetter = ({\n      target: {\n        value\n      }\n    }) => {\n      value = value // Remove all non-digits\n      .replace(/\\d+/g, '');\n      this.setState({\n        letterFirstNameValue: value\n      });\n    };\n\n    this.handleChangeLastNameLetter = ({\n      target: {\n        value\n      }\n    }) => {\n      value = value // Remove all non-digits\n      .replace(/\\d+/g, '');\n      this.setState({\n        letterLastNameValue: value\n      });\n    };\n\n    this.handleCardValue = idCard => {\n      this.setState({\n        cardNumber: idCard\n      });\n    };\n\n    this.handleClickExpiredCard = (month, year) => {\n      this.setState({\n        expiredMonth: month\n      });\n    };\n\n    this.state = {\n      bill: '',\n      lastName: '',\n      firstName: '',\n      cardNumber: '',\n      cryptoNumber: '',\n      expiredMonth: '',\n      expiredYear: '',\n      cardNumberValue: '',\n      cryptoNumberValue: '',\n      letterFirstNameValue: '',\n      letterLastNameValue: ''\n    };\n  }\n\n  render() {\n    console.log(this.state.expiredMonth);\n    return React.createElement(\"div\", {\n      style: {\n        backgroundImage: `url(${background})`,\n        width: '100%',\n        height: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        marginTop: '40px',\n        backgroundColor: '#F3F5F7',\n        width: '30rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(HeaderTransaction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Form, {\n      style: {\n        marginTop: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(CardNumber, {\n      handleClickParent: this.handleCardValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(ExpiredCard, {\n      expiredCard: this.handleClickExpiredCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Label, {\n      style: {\n        color: 'grey'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Cryptogramme visuel\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"cryptoNumber\",\n      id: \"cryptoNumber\",\n      placeholder: \"Cryptogramme visuel\",\n      required: true,\n      value: this.state.cryptoNumberValue,\n      onChange: this.handleChangeryptoNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        marginBottom: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        backgroundColor: '#C82333',\n        border: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Annuler\"), React.createElement(Button, {\n      style: {\n        backgroundColor: '#218838',\n        border: 0\n      },\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Valider\"))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/toooshine/Desktop/GIT/paygreen/frontend/src/Components/Transaction.js"],"names":["React","Button","Form","FormGroup","Label","Input","Card","InputGroupText","InputGroupAddon","InputGroup","HeaderTransaction","CardNumber","ExpiredCard","BeneficiaryClient","background","Transaction","Component","constructor","handleSubmit","fetch","method","headers","body","state","firstName","lastName","catch","error","console","handleChangeryptoNumber","target","value","replace","slice","setState","cryptoNumberValue","handleChangeFirstNameLetter","letterFirstNameValue","handleChangeLastNameLetter","letterLastNameValue","handleCardValue","idCard","cardNumber","handleClickExpiredCard","month","year","expiredMonth","bill","cryptoNumber","expiredYear","cardNumberValue","render","log","backgroundImage","width","height","display","justifyContent","alignItems","marginTop","backgroundColor","color","marginBottom","border"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Card, InputGroupText, InputGroupAddon, InputGroup } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport HeaderTransaction from './HeaderTransaction';\r\nimport CardNumber from './CardNumber';\r\nimport ExpiredCard from './Transaction/ExpiredCard';\r\nimport BeneficiaryClient from './BeneficiaryClient';\r\nimport background from '../images/background.jpg';\r\n\r\nexport default class Transaction extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tbill: '',\r\n\t\t\tlastName: '',\r\n\t\t\tfirstName: '',\r\n\t\t\tcardNumber: '',\r\n\t\t\tcryptoNumber: '',\r\n\t\t\texpiredMonth: '',\r\n\t\t\texpiredYear: '',\r\n\t\t\tcardNumberValue: '',\r\n\t\t\tcryptoNumberValue: '',\r\n\t\t\tletterFirstNameValue: '',\r\n\t\t\tletterLastNameValue: ''\r\n\t\t};\r\n\t}\r\n\thandleSubmit = () => {\r\n\t\t// We want to save a transaction in our db\r\n\t\t// Here, we are using ES6 syntax, so we do not need to store this in ctx.\r\n\t\tfetch('http://localhost:3000/doTransaction', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\r\n\t\t\t},\r\n\t\t\tbody: `first_name=${this.state.firstName}&last_name=${this.state.lastName}`\r\n\t\t}).catch((error) => {\r\n\t\t\tconsole.error(error);\r\n\t\t});\r\n\t};\r\n\r\n\thandleChangeryptoNumber = ({ target: { value } }) => {\r\n\t\tvalue = value\r\n\t\t\t// Remove all non-digits\r\n\t\t\t.replace(/\\D+/, '')\r\n\t\t\t// Stick to first 16, ignore later digits\r\n\t\t\t.slice(0, 3);\r\n\r\n\t\tthis.setState({ cryptoNumberValue: value });\r\n\t};\r\n\r\n\thandleChangeFirstNameLetter = ({ target: { value } }) => {\r\n\t\tvalue = value\r\n\t\t\t// Remove all non-digits\r\n\t\t\t.replace(/\\d+/g, '');\r\n\r\n\t\tthis.setState({ letterFirstNameValue: value });\r\n\t};\r\n\r\n\thandleChangeLastNameLetter = ({ target: { value } }) => {\r\n\t\tvalue = value\r\n\t\t\t// Remove all non-digits\r\n\t\t\t.replace(/\\d+/g, '');\r\n\r\n\t\tthis.setState({ letterLastNameValue: value });\r\n\t};\r\n\r\n\thandleCardValue = (idCard) => {\r\n\t\tthis.setState({ cardNumber: idCard });\r\n\t};\r\n\r\n\thandleClickExpiredCard = (month, year) => {\r\n\t\tthis.setState({ expiredMonth: month });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconsole.log(this.state.expiredMonth);\r\n\t\treturn (\r\n\t\t\t<div style={{ backgroundImage: `url(${background})`, width: '100%', height: '100vh' }}>\r\n\t\t\t\t<div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: '40px',\r\n\t\t\t\t\t\t\tbackgroundColor: '#F3F5F7',\r\n\t\t\t\t\t\t\twidth: '30rem'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<HeaderTransaction />\r\n\t\t\t\t\t\t<Form style={{ marginTop: '5px' }}>\r\n\t\t\t\t\t\t\t<CardNumber handleClickParent={this.handleCardValue} />\r\n\t\t\t\t\t\t\t<ExpiredCard expiredCard={this.handleClickExpiredCard} />\r\n\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t<Label style={{ color: 'grey' }}>Cryptogramme visuel</Label>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"cryptoNumber\"\r\n\t\t\t\t\t\t\t\t\tid=\"cryptoNumber\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Cryptogramme visuel\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.cryptoNumberValue}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChangeryptoNumber}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-around', marginBottom: '30px' }}>\r\n\t\t\t\t\t\t\t\t<Button style={{ backgroundColor: '#C82333', border: 0 }}>Annuler</Button>\r\n\t\t\t\t\t\t\t\t<Button style={{ backgroundColor: '#218838', border: 0 }} onClick={this.handleSubmit}>\r\n\t\t\t\t\t\t\t\t\tValider\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}