{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\toooshine\\\\Desktop\\\\GIT\\\\paygreen\\\\frontend\\\\src\\\\Components\\\\Transaction.js\";\nimport React from 'react';\nimport { Button, Form, FormGroup, Label, Input, Card, InputGroupText, InputGroupAddon, InputGroup } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport HeaderTransaction from './HeaderTransaction';\nimport background from '../images/background.jpg';\nexport default class Transaction extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = () => {\n      console.log(this.state.lastName); // We want to save a transaction in our db\n      // Here, we are using ES6 syntax, so we do not need to store this in ctx.\n\n      fetch('http://localhost:3000/doTransaction', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: `first_name=${this.state.firstName}&last_name=${this.state.lastName}`\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.state = {\n      bill: '',\n      lastName: '',\n      firstName: '',\n      cardNumber: '',\n      cryptoNumber: '',\n      expiredMonth: '',\n      expiredYear: ''\n    };\n  }\n\n  render() {\n    //Afficher le nombre de mois dans le input expiredMonth\n    let months = [];\n    let expiredYear = [];\n\n    for (let i = 1; i < 13; i++) {\n      months.push(React.createElement(\"option\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, i));\n    }\n\n    for (let i = new Date().getFullYear(); i < new Date().getFullYear() + 4; i++) {\n      expiredYear.push(React.createElement(\"option\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, i));\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        backgroundImage: `url(${background})`,\n        width: '100%',\n        height: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        marginTop: '40px',\n        backgroundColor: '#F3F5F7',\n        width: '30rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(HeaderTransaction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Form, {\n      style: {\n        marginTop: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      style: {\n        marginBottom: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Label, {\n      style: {\n        color: 'grey'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Montant\"), React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"number\",\n      name: \"bill\",\n      placeholder: \"Montant\",\n      required: true,\n      onChange: e => this.setState({\n        bill: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"\\u20AC\"))), isNaN(this.state.bill) ? React.createElement(\"p\", {\n      style: {\n        color: '#C82333',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Ceci n'est pas un nombre\") : null), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Label, {\n      style: {\n        color: 'grey'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Nom\"), React.createElement(Input, {\n      type: \"integer\",\n      name: \"lastName\",\n      id: \"lastName\",\n      placeholder: \"Nom\",\n      required: true,\n      onChange: e => this.setState({\n        lastName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), this.state.lastName.match(/\\d/) ? React.createElement(\"p\", {\n      style: {\n        color: '#C82333',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Ceci n'est pas une lettre\") : null), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Label, {\n      style: {\n        color: 'grey'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Pr\\xE9nom\"), React.createElement(Input, {\n      type: \"firstName\",\n      name: \"firstName\",\n      id: \"firstName\",\n      placeholder: \"Pr\\xE9nom\",\n      required: true,\n      onChange: e => this.setState({\n        firstName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), this.state.firstName.match(/\\d/) ? React.createElement(\"p\", {\n      style: {\n        color: '#C82333',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Ceci n'est pas une lettre\") : null), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Label, {\n      style: {\n        color: 'grey'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Num\\xE9ro de carte\"), React.createElement(Input, {\n      type: \"number\",\n      name: \"cardNumber\",\n      id: \"cardNumber\",\n      placeholder: \"Num\\xE9ro de carte\",\n      required: true,\n      onChange: e => this.setState({\n        cardNumber: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), isNaN(this.state.cardNumber) || this.state.cardNumber.length > 16 ? React.createElement(\"p\", {\n      style: {\n        color: '#C82333',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Ceci n'est pas un nombre ou le nombre de chiffre est trop \\xE9lev\\xE9 (16)\") : null), React.createElement(\"div\", {\n      className: \"form-inline\",\n      style: {\n        justifyContent: 'space-around',\n        marginBottom: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      style: {\n        justifyContent: 'flex-start'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Label, {\n      style: {\n        color: 'grey'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Expire fin: \\xA0\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      id: \"expiredMonth\",\n      required: true,\n      onChange: e => this.setState({\n        expiredMonth: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, months), \"\\xA0/\\xA0\", React.createElement(Input, {\n      type: \"select\",\n      name: \"yeexpiredYear\",\n      id: \"expiredYear\",\n      required: true,\n      onChange: e => this.setState({\n        expiredYear: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, expiredYear))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Label, {\n      style: {\n        color: 'grey'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Cryptogramme visuel\"), React.createElement(Input, {\n      type: \"number\",\n      name: \"cryptoNumber\",\n      id: \"cryptoNumber\",\n      placeholder: \"Cryptogramme visuel\",\n      required: true,\n      onChange: e => this.setState({\n        cryptoNumber: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), isNaN(this.state.cryptoNumber) || this.state.cryptoNumber.length > 3 ? React.createElement(\"p\", {\n      style: {\n        color: '#C82333',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Ceci n'est pas un nombre ou le nombre de chiffre est trop \\xE9lev\\xE9 (3)\") : null), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        marginBottom: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        backgroundColor: '#C82333',\n        border: 0\n      },\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Annuler\"), React.createElement(Button, {\n      style: {\n        backgroundColor: '#218838',\n        border: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Valider\"))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/toooshine/Desktop/GIT/paygreen/frontend/src/Components/Transaction.js"],"names":["React","Button","Form","FormGroup","Label","Input","Card","InputGroupText","InputGroupAddon","InputGroup","HeaderTransaction","background","Transaction","Component","constructor","handleSubmit","console","log","state","lastName","fetch","method","headers","body","firstName","catch","error","bill","cardNumber","cryptoNumber","expiredMonth","expiredYear","render","months","i","push","Date","getFullYear","backgroundImage","width","height","display","justifyContent","alignItems","marginTop","backgroundColor","marginBottom","color","e","setState","target","value","isNaN","textAlign","match","length","border"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Card, InputGroupText, InputGroupAddon, InputGroup } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport HeaderTransaction from './HeaderTransaction';\r\nimport background from '../images/background.jpg';\r\n\r\nexport default class Transaction extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tbill: '',\r\n\t\t\tlastName: '',\r\n\t\t\tfirstName: '',\r\n\t\t\tcardNumber: '',\r\n\t\t\tcryptoNumber: '',\r\n\t\t\texpiredMonth: '',\r\n\t\t\texpiredYear: ''\r\n\t\t};\r\n\t}\r\n\thandleSubmit = () => {\r\n\t\tconsole.log(this.state.lastName);\r\n\t\t// We want to save a transaction in our db\r\n\t\t// Here, we are using ES6 syntax, so we do not need to store this in ctx.\r\n\t\tfetch('http://localhost:3000/doTransaction', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\r\n\t\t\t},\r\n\t\t\tbody: `first_name=${this.state.firstName}&last_name=${this.state.lastName}`\r\n\t\t}).catch((error) => {\r\n\t\t\tconsole.error(error);\r\n\t\t});\r\n\t};\r\n\trender() {\r\n\t\t//Afficher le nombre de mois dans le input expiredMonth\r\n\t\tlet months = [];\r\n\t\tlet expiredYear = [];\r\n\t\tfor (let i = 1; i < 13; i++) {\r\n\t\t\tmonths.push(<option key={i}>{i}</option>);\r\n\t\t}\r\n\t\tfor (let i = new Date().getFullYear(); i < new Date().getFullYear() + 4; i++) {\r\n\t\t\texpiredYear.push(<option key={i}>{i}</option>);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div style={{ backgroundImage: `url(${background})`, width: '100%', height: '100vh' }}>\r\n\t\t\t\t<div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: '40px',\r\n\t\t\t\t\t\t\tbackgroundColor: '#F3F5F7',\r\n\t\t\t\t\t\t\twidth: '30rem'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<HeaderTransaction />\r\n\t\t\t\t\t\t<Form style={{ marginTop: '5px' }}>\r\n\t\t\t\t\t\t\t<FormGroup style={{ marginBottom: '10px' }}>\r\n\t\t\t\t\t\t\t\t<Label style={{ color: 'grey' }}>Montant</Label>\r\n\t\t\t\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"bill\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Montant\"\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => this.setState({ bill: e.target.value })}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<InputGroupAddon addonType=\"prepend\">\r\n\t\t\t\t\t\t\t\t\t\t<InputGroupText>€</InputGroupText>\r\n\t\t\t\t\t\t\t\t\t</InputGroupAddon>\r\n\t\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t\t\t{isNaN(this.state.bill) ? (\r\n\t\t\t\t\t\t\t\t\t<p style={{ color: '#C82333', textAlign: 'center' }}>Ceci n'est pas un nombre</p>\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t<Label style={{ color: 'grey' }}>Nom</Label>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\ttype=\"integer\"\r\n\t\t\t\t\t\t\t\t\tname=\"lastName\"\r\n\t\t\t\t\t\t\t\t\tid=\"lastName\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Nom\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => this.setState({ lastName: e.target.value })}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{this.state.lastName.match(/\\d/) ? (\r\n\t\t\t\t\t\t\t\t\t<p style={{ color: '#C82333', textAlign: 'center' }}>Ceci n'est pas une lettre</p>\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t<Label style={{ color: 'grey' }}>Prénom</Label>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\ttype=\"firstName\"\r\n\t\t\t\t\t\t\t\t\tname=\"firstName\"\r\n\t\t\t\t\t\t\t\t\tid=\"firstName\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Prénom\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => this.setState({ firstName: e.target.value })}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{this.state.firstName.match(/\\d/) ? (\r\n\t\t\t\t\t\t\t\t\t<p style={{ color: '#C82333', textAlign: 'center' }}>Ceci n'est pas une lettre</p>\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t<Label style={{ color: 'grey' }}>Numéro de carte</Label>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\tname=\"cardNumber\"\r\n\t\t\t\t\t\t\t\t\tid=\"cardNumber\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Numéro de carte\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => this.setState({ cardNumber: e.target.value })}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{isNaN(this.state.cardNumber) || this.state.cardNumber.length > 16 ? (\r\n\t\t\t\t\t\t\t\t\t<p style={{ color: '#C82333', textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t\t\t\tCeci n'est pas un nombre ou le nombre de chiffre est trop élevé (16)\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName=\"form-inline\"\r\n\t\t\t\t\t\t\t\tstyle={{ justifyContent: 'space-around', marginBottom: '10px' }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<FormGroup style={{ justifyContent: 'flex-start' }}>\r\n\t\t\t\t\t\t\t\t\t<Label style={{ color: 'grey' }}>Expire fin: &nbsp;</Label>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"select\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"select\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"expiredMonth\"\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => this.setState({ expiredMonth: e.target.value })}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{months}\r\n\t\t\t\t\t\t\t\t\t</Input>\r\n\t\t\t\t\t\t\t\t\t&nbsp;/&nbsp;\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"select\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"yeexpiredYear\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"expiredYear\"\r\n\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => this.setState({ expiredYear: e.target.value })}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{expiredYear}\r\n\t\t\t\t\t\t\t\t\t</Input>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t<Label style={{ color: 'grey' }}>Cryptogramme visuel</Label>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\tname=\"cryptoNumber\"\r\n\t\t\t\t\t\t\t\t\tid=\"cryptoNumber\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Cryptogramme visuel\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => this.setState({ cryptoNumber: e.target.value })}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{isNaN(this.state.cryptoNumber) || this.state.cryptoNumber.length > 3 ? (\r\n\t\t\t\t\t\t\t\t\t<p style={{ color: '#C82333', textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t\t\t\tCeci n'est pas un nombre ou le nombre de chiffre est trop élevé (3)\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-around', marginBottom: '30px' }}>\r\n\t\t\t\t\t\t\t\t<Button style={{ backgroundColor: '#C82333', border: 0 }} onClick={this.handleSubmit}>\r\n\t\t\t\t\t\t\t\t\tAnnuler\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button style={{ backgroundColor: '#218838', border: 0 }}>Valider</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}