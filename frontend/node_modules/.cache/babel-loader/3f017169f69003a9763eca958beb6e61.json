{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\toooshine\\\\Desktop\\\\GIT\\\\paygreen\\\\frontend\\\\src\\\\Components\\\\Payment.js\";\nimport React from 'react';\nimport { Button, Form, FormGroup, Label, Input, Card, InputGroupText, InputGroupAddon, InputGroup } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport HeaderTransaction from './HeaderTransaction';\nimport Amount from './Amount';\nimport CardItem from './CardItem';\nimport BeneficiaryClient from './BeneficiaryClient';\nimport background from '../images/background.jpg';\nexport default class Payment extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = () => {\n      // We want to save a transaction in our db\n      // Here, we are using ES6 syntax, so we do not need to store this in ctx.\n      fetch('http://localhost:3000/doTransaction', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: `first_name=${this.state.firstName}&last_name=${this.state.lastName}`\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.handleChangeryptoNumber = ({\n      target: {\n        value\n      }\n    }) => {\n      value = value // Remove all non-digits\n      .replace(/\\D+/, '') // Stick to first 16, ignore later digits\n      .slice(0, 3);\n      this.setState({\n        cryptoNumberValue: value\n      });\n    };\n\n    this.handleChangeFirstNameLetter = ({\n      target: {\n        value\n      }\n    }) => {\n      value = value // Remove all non-digits\n      .replace(/\\d+/g, '');\n      this.setState({\n        letterFirstNameValue: value\n      });\n    };\n\n    this.handleChangeLastNameLetter = ({\n      target: {\n        value\n      }\n    }) => {\n      value = value // Remove all non-digits\n      .replace(/\\d+/g, '');\n      this.setState({\n        letterLastNameValue: value\n      });\n    };\n\n    this.handleCardValue = idCard => {\n      this.setState({\n        cardNumber: idCard\n      });\n    };\n\n    this.state = {\n      bill: '',\n      lastName: '',\n      firstName: '',\n      cardNumber: '',\n      cryptoNumber: '',\n      expiredMonth: '',\n      expiredYear: '',\n      cardNumberValue: '',\n      cryptoNumberValue: '',\n      letterFirstNameValue: '',\n      letterLastNameValue: ''\n    };\n  }\n\n  render() {\n    //Afficher le nombre de mois dans le input expiredMonth\n    let months = [];\n    let expiredYear = [];\n\n    for (let i = 1; i < 13; i++) {\n      months.push(React.createElement(\"option\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, ('0' + i).slice(-2)));\n    }\n\n    for (let i = new Date().getFullYear(); i < new Date().getFullYear() + 4; i++) {\n      expiredYear.push(React.createElement(\"option\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, i));\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        backgroundImage: `url(${background})`,\n        width: '100%',\n        height: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        marginTop: '40px',\n        backgroundColor: '#F3F5F7',\n        width: '30rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        color: '#50C3B9',\n        fontWeight: 'bold',\n        fontSize: 'large'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Le paiement\"), React.createElement(CardItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Amount, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/toooshine/Desktop/GIT/paygreen/frontend/src/Components/Payment.js"],"names":["React","Button","Form","FormGroup","Label","Input","Card","InputGroupText","InputGroupAddon","InputGroup","HeaderTransaction","Amount","CardItem","BeneficiaryClient","background","Payment","Component","constructor","handleSubmit","fetch","method","headers","body","state","firstName","lastName","catch","error","console","handleChangeryptoNumber","target","value","replace","slice","setState","cryptoNumberValue","handleChangeFirstNameLetter","letterFirstNameValue","handleChangeLastNameLetter","letterLastNameValue","handleCardValue","idCard","cardNumber","bill","cryptoNumber","expiredMonth","expiredYear","cardNumberValue","render","months","i","push","Date","getFullYear","backgroundImage","width","height","display","justifyContent","alignItems","marginTop","backgroundColor","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Card, InputGroupText, InputGroupAddon, InputGroup } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport HeaderTransaction from './HeaderTransaction';\r\nimport Amount from './Amount';\r\nimport CardItem from './CardItem';\r\nimport BeneficiaryClient from './BeneficiaryClient';\r\nimport background from '../images/background.jpg';\r\n\r\nexport default class Payment extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tbill: '',\r\n\t\t\tlastName: '',\r\n\t\t\tfirstName: '',\r\n\t\t\tcardNumber: '',\r\n\t\t\tcryptoNumber: '',\r\n\t\t\texpiredMonth: '',\r\n\t\t\texpiredYear: '',\r\n\t\t\tcardNumberValue: '',\r\n\t\t\tcryptoNumberValue: '',\r\n\t\t\tletterFirstNameValue: '',\r\n\t\t\tletterLastNameValue: ''\r\n\t\t};\r\n\t}\r\n\thandleSubmit = () => {\r\n\t\t// We want to save a transaction in our db\r\n\t\t// Here, we are using ES6 syntax, so we do not need to store this in ctx.\r\n\t\tfetch('http://localhost:3000/doTransaction', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\r\n\t\t\t},\r\n\t\t\tbody: `first_name=${this.state.firstName}&last_name=${this.state.lastName}`\r\n\t\t}).catch((error) => {\r\n\t\t\tconsole.error(error);\r\n\t\t});\r\n\t};\r\n\r\n\thandleChangeryptoNumber = ({ target: { value } }) => {\r\n\t\tvalue = value\r\n\t\t\t// Remove all non-digits\r\n\t\t\t.replace(/\\D+/, '')\r\n\t\t\t// Stick to first 16, ignore later digits\r\n\t\t\t.slice(0, 3);\r\n\r\n\t\tthis.setState({ cryptoNumberValue: value });\r\n\t};\r\n\r\n\thandleChangeFirstNameLetter = ({ target: { value } }) => {\r\n\t\tvalue = value\r\n\t\t\t// Remove all non-digits\r\n\t\t\t.replace(/\\d+/g, '');\r\n\r\n\t\tthis.setState({ letterFirstNameValue: value });\r\n\t};\r\n\r\n\thandleChangeLastNameLetter = ({ target: { value } }) => {\r\n\t\tvalue = value\r\n\t\t\t// Remove all non-digits\r\n\t\t\t.replace(/\\d+/g, '');\r\n\r\n\t\tthis.setState({ letterLastNameValue: value });\r\n\t};\r\n\r\n\thandleCardValue = (idCard) => {\r\n\t\tthis.setState({ cardNumber: idCard });\r\n\t};\r\n\r\n\trender() {\r\n\t\t//Afficher le nombre de mois dans le input expiredMonth\r\n\t\tlet months = [];\r\n\t\tlet expiredYear = [];\r\n\t\tfor (let i = 1; i < 13; i++) {\r\n\t\t\tmonths.push(<option key={i}>{('0' + i).slice(-2)}</option>);\r\n\t\t}\r\n\t\tfor (let i = new Date().getFullYear(); i < new Date().getFullYear() + 4; i++) {\r\n\t\t\texpiredYear.push(<option key={i}>{i}</option>);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div style={{ backgroundImage: `url(${background})`, width: '100%', height: '100vh' }}>\r\n\t\t\t\t<div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: '40px',\r\n\t\t\t\t\t\t\tbackgroundColor: '#F3F5F7',\r\n\t\t\t\t\t\t\twidth: '30rem'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<p style={{ color: '#50C3B9', fontWeight: 'bold', fontSize: 'large' }}>Le paiement</p>\r\n\t\t\t\t\t\t<CardItem />\r\n\t\t\t\t\t\t<Amount />\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}