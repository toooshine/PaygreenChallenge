{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\toooshine\\\\Desktop\\\\GIT\\\\paygreen\\\\frontend\\\\src\\\\Components\\\\BeneficiaryClient.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { FormGroup, Label, Input } from 'reactstrap';\nexport default class BeneficiaryClient extends React.Component {\n  constructor() {\n    super();\n\n    this.handleCheckIban = ({\n      target: {\n        value\n      }\n    }) => {\n      value = value.toUpperCase(); // Remove all non-digits\n      // Stick to first 16, ignore later digits\n\n      this.setState({\n        ibanValue: value\n      });\n    };\n\n    this.state = {\n      ibanValue: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Label, {\n      style: {\n        color: 'grey'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Num\\xE9ro IBAN\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"keyIban\",\n      id: \"keyIban\",\n      placeholder: \"keyIban\",\n      maxLength: \"2\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Label, {\n      style: {\n        color: 'grey'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Num\\xE9ro IBAN\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"BankCode\",\n      id: \"BankCode\",\n      placeholder: \"BankCode\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Label, {\n      style: {\n        color: 'grey'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Num\\xE9ro IBAN\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"counterCount\",\n      id: \"counterCount\",\n      placeholder: \"Code guichet\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Label, {\n      style: {\n        color: 'grey'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Num\\xE9ro IBAN\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"countNumber\",\n      id: \"countNumber\",\n      placeholder: \"Num\\xE9ro de compte\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Label, {\n      style: {\n        color: 'grey'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Num\\xE9ro IBAN\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"keyRib\",\n      id: \"keyRib\",\n      placeholder: \"Cl\\xE9 rib\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/toooshine/Desktop/GIT/paygreen/frontend/src/Components/BeneficiaryClient.js"],"names":["React","FormGroup","Label","Input","BeneficiaryClient","Component","constructor","handleCheckIban","target","value","toUpperCase","setState","ibanValue","state","render","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { FormGroup, Label, Input } from 'reactstrap';\r\n\r\nexport default class BeneficiaryClient extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tibanValue: ''\r\n\t\t};\r\n\t}\r\n\thandleCheckIban = ({ target: { value } }) => {\r\n\t\tvalue = value.toUpperCase();\r\n\t\t// Remove all non-digits\r\n\r\n\t\t// Stick to first 16, ignore later digits\r\n\r\n\t\tthis.setState({ ibanValue: value });\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Label style={{ color: 'grey' }}>Numéro IBAN</Label>\r\n\t\t\t\t\t<Input type=\"text\" name=\"keyIban\" id=\"keyIban\" placeholder=\"keyIban\" maxLength=\"2\" required />\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Label style={{ color: 'grey' }}>Numéro IBAN</Label>\r\n\t\t\t\t\t<Input type=\"text\" name=\"BankCode\" id=\"BankCode\" placeholder=\"BankCode\" required />\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Label style={{ color: 'grey' }}>Numéro IBAN</Label>\r\n\t\t\t\t\t<Input type=\"text\" name=\"counterCount\" id=\"counterCount\" placeholder=\"Code guichet\" required />\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Label style={{ color: 'grey' }}>Numéro IBAN</Label>\r\n\t\t\t\t\t<Input type=\"text\" name=\"countNumber\" id=\"countNumber\" placeholder=\"Numéro de compte\" required />\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Label style={{ color: 'grey' }}>Numéro IBAN</Label>\r\n\t\t\t\t\t<Input type=\"text\" name=\"keyRib\" id=\"keyRib\" placeholder=\"Clé rib\" required />\r\n\t\t\t\t</FormGroup>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}