{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\toooshine\\\\Desktop\\\\GIT\\\\paygreen\\\\frontend\\\\src\\\\Components\\\\Customer\\\\Email.js\";\nimport React from 'react';\nimport { FormGroup, Label, Input, FormFeedback } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nexport default class Email extends React.Component {\n  constructor() {\n    super();\n\n    this.checkEmail = email => {\n      console.log('email:', email);\n      const mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (email.match(mailformat)) {\n        this.setState({\n          invalidEmail: false\n        });\n        console.log('ok');\n      } else {\n        this.setState({\n          invalidEmail: true\n        });\n      }\n    };\n\n    this.state = {\n      email: '',\n      invalidEmail: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Label, {\n      style: {\n        color: 'grey'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Email\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"Email\",\n      placeholder: \"Votre Email\",\n      onChange: e => this.checkEmail(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), this.state.invalidEmail ? React.createElement(FormFeedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Votre email est invalid\") : ''));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/toooshine/Desktop/GIT/paygreen/frontend/src/Components/Customer/Email.js"],"names":["React","FormGroup","Label","Input","FormFeedback","Email","Component","constructor","checkEmail","email","console","log","mailformat","match","setState","invalidEmail","state","render","color","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,KAA3B,EAAkCC,YAAlC,QAAsD,YAAtD;AACA,OAAO,kCAAP;AAEA,eAAe,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAClDC,EAAAA,WAAW,GAAG;AACb;;AADa,SAKdC,UALc,GAKAC,KAAD,IAAW;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAtB;AACA,YAAMG,UAAU,GAAG,+CAAnB;;AACA,UAAIH,KAAK,CAACI,KAAN,CAAYD,UAAZ,CAAJ,EAA6B;AAC5B,aAAKE,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,OAHD,MAGO;AACN,aAAKG,QAAL,CAAc;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACA;AACD,KAda;;AAEb,SAAKC,KAAL,GAAa;AAAEP,MAAAA,KAAK,EAAE,EAAT;AAAaM,MAAAA,YAAY,EAAE;AAA3B,KAAb;AACA;;AAaDE,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,EAEC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AACC,MAAA,IAAI,EAAC,OADN;AAEC,MAAA,IAAI,EAAC,OAFN;AAGC,MAAA,EAAE,EAAC,OAHJ;AAIC,MAAA,WAAW,EAAC,aAJb;AAKC,MAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKX,UAAL,CAAgBW,CAAC,CAACC,MAAF,CAASC,KAAzB,CALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAQE,KAAKL,KAAL,CAAWD,YAAX,GAA0B,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA1B,GAAiF,EARnF,CAFD,CADD;AAeA;;AAjCiD","sourcesContent":["import React from 'react';\r\nimport { FormGroup, Label, Input, FormFeedback } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nexport default class Email extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = { email: '', invalidEmail: false };\r\n\t}\r\n\r\n\tcheckEmail = (email) => {\r\n\t\tconsole.log('email:', email);\r\n\t\tconst mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\t\tif (email.match(mailformat)) {\r\n\t\t\tthis.setState({ invalidEmail: false });\r\n\t\t\tconsole.log('ok');\r\n\t\t} else {\r\n\t\t\tthis.setState({ invalidEmail: true });\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Label style={{ color: 'grey' }}>Email</Label>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\tid=\"Email\"\r\n\t\t\t\t\t\tplaceholder=\"Votre Email\"\r\n\t\t\t\t\t\tonChange={(e) => this.checkEmail(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{this.state.invalidEmail ? <FormFeedback>Votre email est invalid</FormFeedback> : ''}\r\n\t\t\t\t</FormGroup>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}